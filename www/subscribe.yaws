<!DOCTYPE html
PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html>

<head>
<meta name="keywords" content="Grue"/>
<title>Grue</title>
<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
<link rel="stylesheet" type="text/css" href="stylesheets/otp_doc.css"/>
</head>

<body>
<div class="logo">
<img src="images/grue.png" alt="GRUE"/>
</div>

<erl>

register_mail(Mail) ->
  Command = "echo " ++ Mail ++ " >> emails.txt",
  io:format("Command: ~p~n", [Command]),
  os:cmd(Command).
%  ets:insert(emails, {Mail}).

is_valid(Mail) ->
  {ok, Re} = re:compile("^[a-zA-Z0-9._-]*@[a-zA-Z0-9_-]*\.[a-zA-Z]{2,4}$"),
  case re:run(Mail, Re) of
    {match, _} ->
      valid;
    nomatch ->
      invalid
  end.

out(Arg) ->
  
  {Client_IP, Port} = Arg#arg.client_ip_port,

  {ok, Challenge} = postvar(Arg, "recaptcha_challenge_field"),
  case postvar(Arg, "recaptcha_response_field") of
    {ok, Response} ->
      ok;
    _ ->
      Response = "null"
  end,

  Result = erl_recaptcha:submit(
    % here goes my recaptcha private key
    "xxxxxxxxxxxxxxxxxxxxxxxxxxx",
    erlang:tuple_to_list(Client_IP),
    Challenge, 
    Response),

  case Result of
    {"false","incorrect-captcha-sol"} ->
      {ehtml,
        {p, [], ["Hey, are you a bot?"]}};
    {"true", "success"} ->
      try {ok, Mail} = postvar(Arg, "email"),
        case is_valid(Mail) of
          valid ->
            register_mail(Mail),
            {ehtml, 
              {p, [], ["Done. You'll get news soon..."]}};
          already ->
            {ehtml,
              {p, [], ["No need to do it: Your mail is already in."]}};
          invalid ->
            {ehtml,
              {p, [], ["Not a valid email, try again."]}};
          Other ->
            io:format("Other: ~p~n", [Other])
        end
      catch
        _:_ ->
          {ehtml,
            {p, [], ["Something went wrong, (empty email?) try again."]}}
      end
  end.
</erl>

<a href="/">Back</a>
</body>

</html>
